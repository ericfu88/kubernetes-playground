#Defines which Linux system user will own and run the Nginx server
#user  nobody;

#Referes to single threaded process. Generally set to be equal to the number of CPUs or cores.
worker_processes  5;

#Specifies the file where server logs.
#error_log  logs/error.log; #error_log  logs/error.log  notice;

#nginx will write its master process ID(PID).
#pid        logs/nginx.pid;

# Changes the limit on the largest size of a core file (RLIMIT_CORE) for worker processes.
# Used to increase the limit without restarting the main process.
worker_rlimit_nofile 8192;

# worker_processes and worker_connections allows you to calculate maxclients value:
# max_clients = worker_processes * worker_connections
events {
  worker_connections  4096;  ## Default: 1024
}

http {
  include       mime.types;
  default_type application/octet-stream;

  #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  #                  '$status $body_bytes_sent "$http_referer" '
  #                  '"$http_user_agent" "$http_x_forwarded_for"';

  #access_log  logs/access.log  main;

  # sendfile        on;
  # If serving locally stored static files, sendfile is essential to speed up the server,
  # But if using as reverse proxy one can deactivate it

  #tcp_nopush     on;
  # works opposite to tcp_nodelay. Instead of optimizing delays, it optimizes the amount of data sent at once.

  #keepalive_timeout  0;
  keepalive_timeout  65;
  # timeout during which a keep-alive client connection will stay open.

  #gzip  on;
  # tells the server to use on-the-fly gzip compression.

  # Sets the bucket size for the server names hash tables. The default value depends on the size of the processorâ€™s cache line.
  # this seems to be required for some vhosts
  # server_names_hash_bucket_size 128;

  # HTTP reverse-proxy
  # server {
  #  listen       80;
  #  # server_name  domain2.com www.domain2.com;
  #  # access_log   logs/domain2.access.log  main;

  #  location / {
  #    # proxy_pass      http://app:8080;
  #    proxy_pass      http://localhost:8080;
  #  }
  #}

  # HTTPS server

  server {
      listen       443 ssl;
      server_name  localhost;

      ssl_certificate      /etc/nginx/appsslpem;
      ssl_certificate_key  /etc/nginx/appsslkey;

      # Sets the types and sizes of caches that store session parameters
      ssl_session_cache    none;

      # Specifies a time during which a client may reuse the session parameters stored in a cache.
      #ssl_session_timeout  5m;

      # used to limit connections to include only the strong versions and ciphers of SSL/TLS.
      # These are default values
      # ssl_ciphers  HIGH:!aNULL:!MD5;
      # ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;

      # Specifies that server ciphers should be preferred over client ciphers when using the SSLv3 and TLS protocols.
      # ssl_prefer_server_ciphers  on;

      location / {
        # proxy_pass      http://app:8080;
        proxy_pass      http://localhost:8080;
      }
  }
}
